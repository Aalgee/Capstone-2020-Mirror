using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using LogicLayerInterfaces;
using DataTransferObjects;
using LogicLayer;

namespace WPFPresentationLayer.PersonnelPages
{
    /// <summary>
    /// Interaction logic for Departments.xaml
    /// </summary>
    public partial class Departments : Page
    {
        private IDepartmentManager _departmentManager;
        private PetUniverseUser _user;
        private Department _department;

        public Departments()
        {
            InitializeComponent();
            _departmentManager = new DepartmentManager();
        }

        /// <summary>
        /// NAME: Jordan Lindo
        /// DATE: 2/13/2020
        /// CHECKED BY: Alex Diers
        /// 
        /// The constructoer with a user.
        /// </summary>
        /// <remarks>
        /// UPDATED BY: NA
        /// UPDATE DATE: NA
        /// WHAT WAS CHANGED: NA
        /// </remarks>
        /// <param name="user"></param>
        public Departments(PetUniverseUser user)
        {
            InitializeComponent();
            _departmentManager = new DepartmentManager();
            _user = user;
        }

        /// <summary>
        /// NAME: Jordan Lindo
        /// DATE: 2/13/2020
        /// CHECKED BY:
        /// 
        /// This is a method for add department click.
        /// </summ/ary>
        /// <remarks>
        /// UPDATED BY: NA
        /// UPDATE DATE: NA
        /// CHANGE: NA
        /// 
        /// </remarks>
        private void btnAddDepartment_Click(object sender, RoutedEventArgs e)
        {
           canDepartmentList.Visibility = Visibility.Hidden;
            canAddDepartment.Visibility = Visibility.Visible;
        }



        /// <summary>
        /// NAME: Jordan Lindo
        /// DATE: 2/13/2020
        /// CHECKED BY:
        /// 
        /// This is the method to try to safely retrieve data for departments.
        /// </summ/ary>
        /// <remarks>
        /// UPDATED BY: NA
        /// UPDATE DATE: NA
        /// CHANGE: NA
        /// 
        /// </remarks>
        private void showDGDepartments()
        {
            try
            {

                dgDepartment.ItemsSource = _departmentManager.RetrieveAllDepartments();
                dgDepartment.IsReadOnly = true;

            }
            catch (Exception ex)
            {

                MessageBox.Show("Data not found. " + ex.InnerException);
            }
        }



        /// <summary>
        /// NAME: Jordan Lindo
        /// DATE: 2/15/2020
        /// CHECKED BY: Alex Diers
        /// 
        /// This is the method for setting the column width.
        /// </summary>
        /// <remarks>
        /// UPDATED BY: NA
        /// UPDATE DATE: NA
        /// CHANGE: NA
        /// 
        /// </remarks>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void dgDepartment_AutoGeneratedColumns(object sender, EventArgs e)
        {
            foreach (var col in dgDepartment.Columns)
            {
                col.Width = 500;
            }
        }

        /// <summary>
        /// NAME: Jordan Lindo
        /// DATE: 2/15/2020
        /// CHECKED BY: Alex Diers
        /// 
        /// This is the method fills a data grid.
        /// </summary>
        /// <remarks>
        /// UPDATED BY: NA
        /// UPDATE DATE: NA
        /// CHANGE: NA
        /// 
        /// </remarks>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void dgDepartment_Loaded(object sender, RoutedEventArgs e)
        {
            showDGDepartments();
        }

        /// <summary>
        /// NAME: Jordan Lindo
        /// DATE: 2/13/2020
        /// CHECKED BY: Alex Diers
        /// 
        /// This button click listener sends the data for creating a new department record to the logic layer
        /// </summary>
        /// <remarks>
        /// UPDATED BY: NA
        /// UPDATE DATE: NA
        /// WHAT WAS CHANGED: NA
        /// 
        /// </remarks>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnAddDepartmentSave_Click(object sender, RoutedEventArgs e)
        {
            string departmentID = txtAddDepartmentDepartmentName.Text;
            string description = txtAddDepartmentDescription.Text;

            try
            {
                bool result = _departmentManager.AddDepartment(departmentID, description);
                if (result)
                {
                    MessageBox.Show("Department Added.");
                    canAddDepartment.Visibility = Visibility.Hidden;
                    canDepartmentList.Visibility = Visibility.Visible;
                    showDGDepartments();
                }
                else
                {
                    MessageBox.Show("Department Not Added.");
                }
            }
            catch (Exception ex)
            {

                MessageBox.Show("Department failed to save." + ex.Message);
            }
        }


        /// <summary>
        /// NAME: Jordan Lindo
        /// DATE: 2/15/2020
        /// CHECKED BY: Alex Diers
        /// 
        /// This method hides the canvas.
        /// </summary>
        /// <remarks>
        /// UPDATED BY: NA
        /// UPDATE DATE: NA
        /// WHAT WAS CHANGED: NA
        /// 
        /// </remarks>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnAddDepartmentCancel_Click(object sender, RoutedEventArgs e)
        {
            canAddDepartment.Visibility = Visibility.Hidden;
            canDepartmentList.Visibility = Visibility.Visible;
        }

        /// <summary>
        /// NAME: Jordan Lindo
        /// DATE: 2/15/2020
        /// CHECKED BY:
        /// 
        /// This is a method for edit department click.
        /// </summ/ary>
        /// <remarks>
        /// UPDATED BY: NA
        /// UPDATE DATE: NA
        /// CHANGE: NA
        /// 
        /// </remarks>
        private void btnEditDepartment_Click(object sender, RoutedEventArgs e)
        {
            if (!dgDepartment.SelectedIndex.Equals(-1))
            {
                string departmentID = txtAddDepartmentDepartmentName.Text;
                string description = txtAddDepartmentDescription.Text;

                try
                {
                    Department department = (Department)dgDepartment.SelectedItem;
                    _department = new Department
                    {
                        DepartmentID = departmentID,
                        Description = description
                    };


                    lblEditDepartmentDepartmentName.Content = _department.DepartmentID;
                    txtEditDepartmentOldDescription.Text = _department.Description;

                    canDepartmentList.Visibility = Visibility.Hidden;
                    canEditDepartment.Visibility = Visibility.Visible;

                }
                catch (Exception ex)
                {

                    MessageBox.Show("Edit failed. " + ex.InnerException);
                }
            }
        }


        /// <summary>
        /// NAME: Jordan Lindo
        /// DATE: 2/18/2020
        /// CHECKED BY: Alex Diers
        /// 
        /// This is a method for clicking save.
        /// </summary>
        /// <remarks>
        /// UPDATED BY: NA
        /// UPDATE DATE: NA
        /// WHAT WAS CHANGED: NA
        /// 
        /// </remarks>
        private void btnSave_Click(object sender, RoutedEventArgs e)
        {
            string newDescription = txtEditDepartmentDescription.Text;

            try
            {
                bool result = _departmentManager.EditDepartment(_department, new Department
                {
                    DepartmentID = _department.DepartmentID,
                    Description = newDescription
                });

                if (result)
                {
                    MessageBox.Show("The changes were successfully made.");
                    txtEditDepartmentDescription.Text = "";
                    canEditDepartment.Visibility = Visibility.Hidden;
                    canDepartmentList.Visibility = Visibility.Visible;
                }
                else
                {
                    MessageBox.Show("Your changes were not made.");
                }
            }
            catch (Exception ex)
            {

                MessageBox.Show("Unable to save. ", ex.InnerException.Message);
            }
        }


        /// <summary>
        /// NAME: Jordan Lindo
        /// DATE: 2/18/2020
        /// CHECKED BY: Alex Diers
        /// 
        /// This is a method for clicking cancel.
        /// </summary>
        /// <remarks>
        /// UPDATED BY: NA
        /// UPDATE DATE: NA
        /// WHAT WAS CHANGED: NA
        /// 
        /// </remarks>
        private void btnEditDepartmentCancel_Click(object sender, RoutedEventArgs e)
        {
            txtEditDepartmentDescription.Text = "";
            canEditDepartment.Visibility = Visibility.Hidden;
            canDepartmentList.Visibility = Visibility.Visible;
        }
    }
}

