using DataTransferObjects;
using LogicLayer;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace WPFPresentationLayer.InventoryPages
{
    /// <summary>
    /// NAME: Jesse Tomash
    /// DATE: 3/30/2020
    ///
    /// Approver: Brandyn T. Coverdill
    /// Approver: 
    /// 
    /// Interaction logic  for ViewSpecialOrders.xaml
    /// </summary>
    /// /// <remarks>
    /// UPDATED BY:
    /// UPDATE DATE:
    /// WHAT WAS CHANGED:
    /// </remarks>
    /// <returns></returns>
    public partial class ViewSpecialOrders : Page
    {
        private SpecialOrderManager _orderManager = new SpecialOrderManager();
        private List<SpecialOrder> _orders;
        private List<SpecialOrder> _currentOrders;

        /// <summary>
        /// NAME: Jesse Tomash
        /// DATE: 3/30/2020
        ///
        /// Approver: Brandyn T. Coverdill
        /// Approver: 
        /// 
        /// Iconstructor  for ViewSpecialOrders.xaml
        /// </summary>
        /// /// <remarks>
        /// UPDATED BY:
        /// UPDATE DATE:
        /// WHAT WAS CHANGED:
        /// </remarks>
        /// <returns></returns>
        public ViewSpecialOrders()
        {
            InitializeComponent();
            btnSpRefresh.Visibility = Visibility.Visible;
            dgSpecialOrders.Visibility = Visibility.Visible;
            btnAddSpecialOrder.Visibility = Visibility.Visible;
            btnDeleteSpecialOrder.Visibility = Visibility.Visible;
        }

        /// <summary>
        /// NAME: Jesse Tomash
        /// DATE: 3/30/2020
        ///
        /// Approver: Brandyn T. Coverdill
        /// Approver: 
        /// 
        /// Opens Add Order on click
        /// </summary>
        /// /// <remarks>
        /// UPDATED BY: Brandyn T. Coverdill
        /// UPDATE DATE: 4/7/2020
        /// WHAT WAS CHANGED: Changed ViewAddOrder() to ViewAddSpecialOrder()
        /// </remarks>
        /// <returns></returns>
        private void BtnAddSpecialOrder_Click(object sender, RoutedEventArgs e)
        {
            this.NavigationService?.Navigate(new ViewAddSpecialOrder());
        }

        /// <summary>
        /// NAME: Jesse Tomash
        /// DATE: 3/30/2020
        ///
        /// Approver: Brandyn T. Coverdill
        /// Approver: 
        /// 
        /// Formats the DG
        /// </summary>
        /// /// <remarks>
        /// UPDATED BY:
        /// UPDATE DATE:
        /// WHAT WAS CHANGED:
        /// </remarks>
        /// <returns></returns>
        private void dgSpecialOrders_AutoGeneratedColumns_1(object sender, EventArgs e)
        {
            dgSpecialOrders.Columns[0].Header = "Special Order ID";
            dgSpecialOrders.Columns[1].Header = "Employee ID";
            dgSpecialOrders.Columns[2].Visibility = Visibility.Hidden;
            //dgOrders.Columns[2].Visible = false; this is supposed to work?!?
            foreach (var column in this.dgSpecialOrders.Columns)
            {
                column.Width = new DataGridLength(1, DataGridLengthUnitType.Star);
            }
        }

        /// <summary>
        /// NAME: Jesse Tomash
        /// DATE: 4/3/2020
        ///
        /// Approver: Brandyn T. Coverdill
        /// Approver: 
        /// 
        /// refresh the dg
        /// </summary>
        /// /// <remarks>
        /// UPDATED BY:
        /// UPDATE DATE:
        /// WHAT WAS CHANGED:
        /// </remarks>
        /// <returns></returns>
        private void btnSpRefresh_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                _orders = (List<SpecialOrder>)_orderManager.RetrieveSpecialOrders();

                if (_currentOrders == null)
                {
                    _currentOrders = _orders;
                }
                dgSpecialOrders.ItemsSource = _currentOrders;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        /// <summary>
        /// NAME: Jesse Tomash
        /// DATE: 3/30/2020
        ///
        /// Approver: Brandyn T. Coverdill
        /// Approver: 
        /// 
        /// Updates order list on gridload
        /// </summary>
        /// /// <remarks>
        /// UPDATED BY:
        /// UPDATE DATE:
        /// WHAT WAS CHANGED:
        /// </remarks>
        /// <returns></returns>
        private void Grid_Loaded(object sender, RoutedEventArgs e)
        {
            try
            {
                _orders = (List<SpecialOrder>)_orderManager.RetrieveSpecialOrders();

                if (_currentOrders == null)
                {
                    _currentOrders = _orders;
                }

                btnAddSpecialOrder.Visibility = Visibility.Visible;
                dgSpecialOrders.ItemsSource = _currentOrders;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
    }
}
