using DataTransferObjects;
using LogicLayer;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace WPFPresentationLayer.InventoryPages
{
    /// <summary>
    /// Creator: Jesse Tomash
    /// Created: 3/30/2020
    /// Approver: Brandyn T. Coverdill
    /// Approver: 
    ///
    /// Code-behind file for Viewing ORders.
    /// </summary>
    public partial class ViewOrders : Page
    {
        private OrderManager _orderManager = new OrderManager();
        private List<Order> _orders;
        private List<Order> _currentOrders;

        /// <summary>
        /// NAME: Jesse Tomash
        /// DATE: 3/30/2020
        ///
        /// Approver: Brandyn T. Coverdill
        /// Approver: 
        /// 
        /// Iconstructor  for ViewSpecialOrders.xaml
        /// </summary>
        /// /// <remarks>
        /// UPDATED BY:
        /// UPDATE DATE:
        /// WHAT WAS CHANGED:
        /// </remarks>
        /// <returns></returns>
        public ViewOrders()
        {
            InitializeComponent();
            btnRefresh.Visibility = Visibility.Visible;
            dgOrders.Visibility = Visibility.Visible;
            btnAddOrder.Visibility = Visibility.Visible;
            btnDeleteOrder.Visibility = Visibility.Visible;
        }

        /// <summary>
        /// NAME: Jesse Tomash
        /// DATE: 3/30/2020
        ///
        /// Approver: Brandyn T. Coverdill
        /// Approver: 
        /// 
        /// Opens Add Order on click
        /// </summary>
        /// /// <remarks>
        /// UPDATED BY:
        /// UPDATE DATE:
        /// WHAT WAS CHANGED:
        /// </remarks>
        /// <returns></returns>
        private void BtnAddOrder_Click(object sender, RoutedEventArgs e)
        {
            this.NavigationService?.Navigate(new ViewAddOrder());
        }

        /// <summary>
        /// NAME: Jesse Tomash
        /// DATE: 3/30/2020
        ///
        /// Approver: Brandyn T. Coverdill
        /// Approver: 
        /// 
        /// Formats the DG
        /// </summary>
        /// /// <remarks>
        /// UPDATED BY:
        /// UPDATE DATE:
        /// WHAT WAS CHANGED:
        /// </remarks>
        /// <returns></returns>
        private void dgOrders_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dgOrders.Columns[0].Header = "Order ID";
            dgOrders.Columns[1].Header = "Employee ID";
            dgOrders.Columns[2].Visibility = Visibility.Hidden;
            foreach (var column in this.dgOrders.Columns)
            {
                column.Width = new DataGridLength(1, DataGridLengthUnitType.Star);
            }
        }

        /// <summary>
        /// NAME: Jesse Tomash
        /// DATE: 4/3/2020
        ///
        /// Approver: Brandyn T. Coverdill
        /// Approver: 
        /// 
        /// refresh the dg
        /// </summary>
        /// /// <remarks>
        /// UPDATED BY:
        /// UPDATE DATE:
        /// WHAT WAS CHANGED:
        /// </remarks>
        /// <returns></returns>
        private void btnRefresh_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                _orders = (List<Order>)_orderManager.RetrieveOrders();

                if (_currentOrders == null)
                {
                    _currentOrders = _orders;
                }
                dgOrders.ItemsSource = _currentOrders;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        /// <summary>
        /// NAME: Jesse Tomash
        /// DATE: 3/30/2020
        ///
        /// Approver: Brandyn T. Coverdill
        /// Approver: 
        /// 
        /// Updates order list on gridload
        /// </summary>
        /// /// <remarks>
        /// UPDATED BY:
        /// UPDATE DATE:
        /// WHAT WAS CHANGED:
        /// </remarks>
        /// <returns></returns>
        private void Grid_Loaded(object sender, RoutedEventArgs e)
        {
            try
            {
                dgOrders.ItemsSource = _orderManager.RetrieveOrders();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
    }
}
